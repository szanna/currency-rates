name: Build docker images (front, backend)

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      ver_tag:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'version tag'
        # Input has to be provided for the workflow to run
        required: true      
env:
  IMAGE_FRONT_NAME: nbp-front
  IMAGE_BACK_NAME: nbp-back
  IMAGE_SSL_NAME: nbp-ssl
  
jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
#           ref: refs/tags/${{ github.event.inputs.ver_tag }}
          ref: ${{ github.event.inputs.ver_tag }}

      - name: Build front image
        run: docker build . --tag $IMAGE_FRONT_NAME
        working-directory: ./frontend
        
      - name: Build backend image
        run: docker build . --tag $IMAGE_BACK_NAME
        working-directory: ./backend

      - name: Log into GitHub Container Registry
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_FRONT_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "dev" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_FRONT_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_BACK_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "dev" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_BACK_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
